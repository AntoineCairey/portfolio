menu:
  about_me:
    fr: Pr√©sentation
    en: About me
  projects:
    fr: Projets
    en: Projects
  contact:
    fr: Contact
    en: Contact

about_me:
  greeting:
    fr: Bonjour ! üëã
    en: Hello ! üëã
  description:
    fr: >
      <p>Je suis Antoine Cairey, <strong>d√©veloppeur JavaScript fullstack.</strong></p>
      <br />
      <p>Apr√®s des √©tudes d'ing√©nieur g√©n√©raliste et 7 ans en tant que chef de projet informatique, j'ai choisi de passer de l'autre c√¥t√© de la barri√®re pour devenir d√©veloppeur web.</p>
      <br />
      <p>Je cherche aujourd'hui une entreprise pour mettre √† profit mes comp√©tences et ma motivation. Je ma√Ætrise <strong>React</strong> et <strong>Node.js</strong>, et je n'ai pas peur d'apprendre de nouvelles technos !</p>
    en: >
      <p>I'm Antoine Cairey, <strong>JavaScript fullstack developer.</strong></p>
      <br />
      <p>After studying general engineering and 7 years as an IT project manager, I decided to switch to the other side and become a web developer.</p>
      <br />
      <p>I'm now looking for a company to put my skills and motivation to good use. I've mastered <strong>React</strong> and <strong>Node.js</strong>, and I'm not afraid to learn new technologies!</p>

contact:
  text:
    fr: N‚Äôh√©sitez pas √† me contacter !
    en: Don't hesitate to contact me!

footer:
  text:
    fr: R√©alis√© √† Bordeaux par Antoine Cairey
    en: Made in Bordeaux by Antoine Cairey
  repo_link:
    fr: Voir le code de ce site
    en: View this site's code

project_page:
  back:
    fr: Retour
    en: Back
  site_link:
    fr: Acc√©der au site
    en: Go to website
  repo_link:
    fr: Voir le code sur GitHub
    en: View code on GitHub
  context:
    fr: Contexte
    en: Context
  development:
    fr: R√©alisation
    en: Development
  feedback:
    fr: Retour d'exp√©rience
    en: Feedback

projects:
  kanji:
    name: Kanji Master
    site_link: https://kanji.antoinecairey.com/
    repo_link: https://github.com/AntoineCairey/kanji
    img_nb: 5
    date:
      fr: fev-mars 2024
      en: feb-mar 2024
    team:
      fr: Projet solo
      en: Solo project
    tech:
      - name: Angular
        icon: faAngular
      - name: Spring
        icon: faJava
      - name: MySQL
        icon: faDatabase
    short_text:
      fr: Application pour apprendre les caract√®res japonais
      en: Japanese character learning app
    context:
      fr: J'apprends le japonais √† mes heures perdues, et le plus difficile selon moi est l'apprentissage des kanjis (id√©ogrammes). La m√©thode la plus efficace pour cet apprentissage "par coeur" est la r√©p√©tition espac√©e. Dans notre cas, l'app va pr√©senter un kanji √† l'utilisateur, qui doit indiquer s'il le connait ou non. Selon sa r√©ponse, l'app va calculer dans combien de temps elle lui montrera √† nouveau ce kanji. Ce syt√®me permet d'optimiser l'apprentissage en montrant une kanji au moment o√π on risque de l'oublier.
      en: I learn Japanese in my spare time, and the hardest part for me is learning the kanji (ideograms). The most effective method for this is spaced repetition.  In our case, the app will show a kanji to the user, and ask whether or not he or she knows it. Depending on the user's response, the app will calculate when it will show the kanji again. This system optimizes learning by showing a kanji just when you're likely to forget it.
    development:
      fr: Ce projet √©tait l'occasion de pratiquer la stack Java/Angular apprise r√©cemment. Le frontend Angular utilise le nouveau syst√®me de Signals pour g√©rer les donn√©es dynamiques. Le backend utilise Spring Boot, avec Maven comme outil de build, Spring Security pour l'authentification, et Spring Data JPA (Hibernate) comme ORM. Tout √ßa est reli√© √† une base de donn√©es MySQL pour stocker les donn√©es utilisateur. Le projet est d√©ploy√© sur un VPS avec Caddy comme serveur web et Docker Compose comme conteneur pour le backend.
      en: This project was an opportunity to practice the recently learned Java/Angular stack. The Angular frontend uses the new Signals system to manage dynamic data. The backend uses Spring Boot, with Maven as the build tool, Spring Security for authentication, and Spring Data JPA (Hibernate) as the ORM. All this is linked to a MySQL database to store user data. The project is deployed on a VPS with Caddy as the web server and Docker Compose as the backend container.
    feedback:
      fr: "Ce projet √©tait mon premier avec cette stack et donc l'occasion de nombreuses d√©couvertes et recherches dans la documentation. Il fallait adopter une nouvelle fa√ßon de penser orient√©e objet, tr√®s diff√©rente de mon exp√©rience en React/Node. J'ai d'abord vu les inconv√©nients : on √©crit plus de code, il faut tout d√©finir, tout typer, √ßa parait tr√®s contraignant au d√©but. Puis j'ai commenc√© √† prendre le pli et voir les avantages : une seule fa√ßon standard de faire chaque chose, pas d'erreur au runtime. Je comprends d'autant mieux la popularit√© de cette stack pour les grandes applications et entreprises."
      en: "This was my first project with this stack, and therefore the occasion for a lot of discoveries and research in the documentation. I had to adopt a new object-oriented way of thinking, very different from my React/Node experience. At first, I saw the disadvantages: you write more code, you have to define and type everything, and it seemed very restrictive at first. Then I started to see the advantages: one standard way of doing everything, no runtime errors. I now understand all the more why this stack is so popular with large applications and companies."

  tarot:
    name: Tarot Africain
    site_link: https://tarot.antoinecairey.com/
    repo_link: https://github.com/AntoineCairey/whist22
    img_nb: 5
    date:
      fr: juin-oct 2024
      en: june-oct 2024
    team:
      fr: Projet solo
      en: Solo project
    tech:
      - name: React
        icon: faReact
      - name: Node.js
        icon: faNodeJs
      - name: MongoDB
        icon: faLeaf
    short_text:
      fr: Application de jeu de cartes disponible en ligne et hors ligne
      en: Card game application available online and offline
    context:
      fr: Ce projet personnel √©tait l'occasion de challenger mes comp√©tences en cr√©ant un jeu de cartes. Il s'agit ici du tarot africain, un jeu rapide et anim√© auquel je joue souvent avec mes amis. L'application permet de jouer une partie contre 3 bots. Les joueurs peuvent cr√©er un compte pour enregister leurs scores et appara√Ætre dans le classement g√©n√©ral de l'app.
      en: This personal project was an opportunity to challenge my skills by creating a card game. The game here is Whist 22, a fast-paced and lively game I often play with my friends. The app lets you play a game against 3 bots. Players can create an account to record their scores and appear in the app's general ranking.
    development:
      fr: Le frontend est bas√© sur React. Il utilise Vite PWA pour cr√©er une Progressive Web App, ce qui permet d'installer l'app sur l'appareil (smartphone ou ordinateur), pour pouvoir jouer hors ligne. Le backend utilise Node.js, reli√© √† une base de donn√©es MongoDB. Le projet est d√©ploy√© sur un VPS, et utilise Docker Compose et Caddy Web Server.
      en: The frontend is based on React. It uses Vite PWA to create a Progressive Web App, enabling the app to be installed on the device (smartphone or computer), for offline play. The backend uses Node.js, linked to a MongoDB database. The project is deployed on a VPS, using Docker Compose and Caddy Web Server.
    feedback:
      fr: Le premier challenge √©tait de coder la logique du d√©roulement d'une partie de tarot africain, mais aussi l'algorithme de prise de d√©cision des bots, ce qui √©tait particuli√®rement int√©ressant pour moi. J'ai aussi appris le fonctionnement des PWA et les exigences techniques n√©cessaires pour permettre l'installation de l'app. C√¥t√© backend, j'ai voulu tester une base de donn√©es NoSQL avec MongoDB. C'est une logique tr√®s diff√©rente du SQL, que ce ce soit sur la structuration des donn√©es ou sur la fa√ßon de requ√™ter et la syntaxe associ√©e. Une fois ma√Ætris√©, c'est une alternative vraiment int√©ressante, car elle permet une grande libert√© de structure, mais aussi de scaler plus facilement pour g√©rer de grands volumes de donn√©es.
      en: The first challenge was to code the logic of a Whist 22 game, but also the bots' decision-making algorithm, which was particularly interesting for me. I also learned how PWAs work and the technical requirements needed to enable app installation. On the backend, I wanted to test a NoSQL database with MongoDB. The logic is very different from SQL, in terms of data structuring, querying and syntax. Once mastered, it's a really interesting alternative, as it gives you a great deal of freedom in terms of structure, but also allows you to scale more easily to manage large volumes of data.

  geocode:
    name: Geocode
    site_link: https://lesgeocodeurs.laloupe-1.wilders.dev/
    repo_link: https://github.com/AntoineCairey/geocode
    img_nb: 7
    date:
      fr: janv-fev 2024
      en: jan-feb 2024
    team:
      fr: Projet de groupe (3 devs)
      en: Group project (3 devs)
    tech:
      - name: React
        icon: faReact
      - name: Node.js
        icon: faNodeJs
      - name: MySQL
        icon: faDatabase
    short_text:
      fr: Site web de r√©servation de bornes de recharge pour v√©hicules √©lectriques
      en: Reservation website for electric vehicle charging stations
    context:
      fr: Il s‚Äôagit du dernier projet de ma formation, r√©alis√© avec 2 autres devs sur 2 mois en tout. L‚Äôobjectif ici est de r√©aliser une app de r√©servation de bornes de recharges pour v√©hicules √©lectriques. Elle doit comporter notamment une carte interactive et une gestion de compte utilisateur (inscription, connexion, etc).
      en: This is the last project of my training, carried out with 2 other devs over 2 months in all. The objective here is to create an app for reserving charging stations for electric vehicles. It has to include an interactive map and user account management (registration, login, etc.).
    development:
      fr: Le frontend utilise React et son √©cosyst√®me. La carte utilise l‚ÄôAPI Google Maps, et le style est bas√© sur la librairie UI MDBootstrap. Le backend est un serveur d‚ÄôAPI en Express.js, avec authentification via JWT et protection des routes selon le r√¥le de l‚Äôutilisateur. Les donn√©es sont stock√©es sur MySQL.
      en: The frontend uses React and its ecosystem. The map uses the Google Maps API, and styling is based on the MDBootstrap UI library. The backend is an API server in Express.js, with authentication via JWT and route protection according to user role. Data is stored on MySQL.
    feedback:
      fr: J‚Äôai particuli√®rement aim√© travailler sur l‚Äôauthentification utilisateur (frontend et backend), ainsi que sur la carte interactive, 2 d√©fis techniques que je n‚Äôavais jamais relev√©s.
      en: I particularly enjoyed working on user authentication (frontend and backend), as well as the interactive map, 2 technical challenges I'd never tackled before.

  fragrance:
    name: Fragrance
    site_link: https://fragrance.antoinecairey.com/
    repo_link: https://github.com/AntoineCairey/fragrance
    img_nb: 5
    date:
      fr: janv 2023 (hackathon 3 jours)
      en: jan 2023 (3-day hackathon)
    team:
      fr: Projet de groupe (5 devs)
      en: Group project (5 devs)
    tech:
      - name: React
        icon: faReact
      - name: Node.js
        icon: faNodeJs
      - name: MySQL
        icon: faDatabase
    short_text:
      fr: Recommandation de parfum bas√©e sur vos odeurs pr√©f√©r√©es
      en: Fragrance recommendation based on your favorite scents
    context:
      fr: Projet cr√©√© avec 4 autres devs, lors d‚Äôun hackathon de 3 jours en partenariat avec le groupe L‚ÄôOr√©al. L‚Äôapplication commence demander √† l‚Äôutilisateur s‚Äôil appr√©cie diff√©rentes odeurs du quotidien. Puis, √† partir de ses r√©ponses, elle lui propose une s√©lection de parfums adapt√©s √† ses pr√©f√©rences.
      en: Project created with 4 other devs, during a 3-day hackathon in partnership with the L'Or√©al group. The application begins by asking the user if he or she enjoys different everyday scents. Then, based on their answers, it suggests a selection of fragrances suited to their preferences.
    development:
      fr: L‚Äôinterface est bas√©e sur React, et le style est en CSS vanilla. Le backend Express.js se base sur la base de donn√©es MySQL pour calculer les recommandations renvoy√©es √† l‚Äôutilisateur.
      en: The interface is based on React, and the styling is in vanilla CSS. The Express.js backend relies on the MySQL database to calculate the recommendations returned to the user.
    feedback:
      fr: Cr√©er une app fullstack dans un temps aussi court √©tait tr√®s enrichissant. J‚Äôai particuli√®rement appr√©ci√© travailler sur l‚Äôalgorithme de recommandation des parfums, un challenge technique tr√®s int√©ressant.
      en: Creating a fullstack app in such a short time was very rewarding. I particularly enjoyed working on the perfume recommendation algorithm, a very interesting technical challenge.

  moviz:
    name: Moviz
    site_link: https://elemen5.vercel.app/
    repo_link: https://github.com/AntoineCairey/elemen5
    img_nb: 7
    date:
      fr: dec 2023 - janv 2024
      en: dec 2023 - jan 2024
    team:
      fr: Projet de groupe (5 devs)
      en: Group project (5 devs)
    tech:
      - name: React
        icon: faReact
    short_text:
      fr: Catalogue de film et s√©ries inspir√© de IMDb
      en: Film and series catalog inspired by IMDb
    context:
      fr: Projet r√©alis√© pendant ma formation avec 4 autres devs sur 1 mois. L‚Äôid√©e ici est de r√©aliser une app ‚Äúcatalogue‚Äù de films et s√©ries, un peu comme IMDb. L‚Äôapp pr√©sente une page d‚Äôaccueil avec des suggestions, une fonction de recherche par texte et filtre, et bien s√ªr les fiches de films et s√©ries.
      en: Project carried out during my training with 4 other devs over 1 month. The idea here is to create a "catalog" app for films and series, a bit like IMDb. The app features a home page with suggestions, a search function using text and filters, and of course the film and series cards.
    development:
      fr: Le frontend est r√©alis√© avec React et le style en Sass. Les donn√©es proviennent de TMDB, un site communautaire qui fournit une API publique tr√®s compl√®te.
      en: The frontend is built with React and the styling with Sass. The data comes from TMDB, a community site that provides a comprehensive public API.
    feedback:
      fr: Un premier projet d‚Äôenvergure en React, qui m‚Äôa permis d‚Äôen comprendre les avantages et inconv√©nients. C‚Äô√©tait aussi l‚Äôoccasion de mettre en place un vrai workflow Git pour travailler en parall√®le sur le projet.
      en: This was my first major project using React, and it enabled me to understand its advantages and disadvantages. It was also an opportunity to set up a real Git workflow to work in parallel on the project.

  rodolf:
    name: Rodolf
    site_link: https://rodolf.vercel.app/
    repo_link: https://github.com/AntoineCairey/rodolf
    img_nb: 5
    date:
      fr: dec 2023 (hackathon 2 jours)
      en: dec 2023 (2-day hackathon)
    team:
      fr: Projet de groupe (3 devs)
      en: Group project (3 devs)
    tech:
      - name: React
        icon: faReact
    short_text:
      fr: Jeu mobile pour animer les repas de famille
      en: Mobile game to liven up family meals
    context:
      fr: Projet cr√©√© avec 2 autres devs lors d‚Äôun hackathon de 2 jours sur le th√®me des f√™tes de fin d‚Äôann√©e. Nous avons voulu cr√©er une sorte de jeu d‚Äôambiance pour les repas de famille, qui propose des blagues, d√©fis et √©nigmes aux joueurs √† tour de r√¥le.
      en: Project created with 2 other devs during a 2-day holiday-themed hackathon. We wanted to create a kind of atmospheric game for family dinners, offering jokes, challenges and puzzles to players in turn.
    development:
      fr: L‚Äôapp est uniquement frontend, r√©alis√©e en React. Les donn√©es des blagues et jeux sont r√©cup√©r√©es dans un fichier JSON.
      en: The app is frontend-only, built in React. Joke and game data are retrieved in a JSON file.
    feedback:
      fr: Le temps imparti tr√®s court apprend √† travailler sous pression et prioriser les t√¢ches les plus importantes. Ce fut plut√¥t une r√©ussite car nous avons remport√© ce hackathon üèÜ
      en: The short time frame taught us to work under pressure and prioritize the most important tasks. It was quite a success, as we won the hackathon üèÜ
